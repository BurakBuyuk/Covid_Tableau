<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sayfa1 (COVID-T-1)' inline='true' name='federated.0fhazc80kledse16s5d3a03y0s1u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-T-1' name='excel-direct.0te92je06ntgwg1cepkkm0ul3qul'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yenib/OneDrive/Masa端st端/COVID-T-1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0te92je06ntgwg1cepkkm0ul3qul' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0te92je06ntgwg1cepkkm0ul3qul' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_7005936DE6D74E67BC6DE1CB8AB60708]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_7005936DE6D74E67BC6DE1CB8AB60708]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_7005936DE6D74E67BC6DE1CB8AB60708]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_7005936DE6D74E67BC6DE1CB8AB60708]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_7005936DE6D74E67BC6DE1CB8AB60708'>
            <properties context=''>
              <relation connection='excel-direct.0te92je06ntgwg1cepkkm0ul3qul' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (COVID-T-2)' inline='true' name='federated.1834pbz1m4udpm17tuiku0tw8hw0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-T-2' name='excel-direct.1mvoctv1ryizmi1fkeuy61gx0io3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yenib/OneDrive/Masa端st端/COVID-T-2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mvoctv1ryizmi1fkeuy61gx0io3' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mvoctv1ryizmi1fkeuy61gx0io3' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_EEC14B040F824C77B38D94DC1B0E2D00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_EEC14B040F824C77B38D94DC1B0E2D00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_EEC14B040F824C77B38D94DC1B0E2D00]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_EEC14B040F824C77B38D94DC1B0E2D00'>
            <properties context=''>
              <relation connection='excel-direct.1mvoctv1ryizmi1fkeuy61gx0io3' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (COVID-T-3)' inline='true' name='federated.0nrub84030llck1ax1to31l440dm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-T-3' name='excel-direct.0kk3eze0r5i0qk144ihj70vgew9w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yenib/OneDrive/Masa端st端/COVID-T-3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kk3eze0r5i0qk144ihj70vgew9w' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kk3eze0r5i0qk144ihj70vgew9w' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_91153440BE874C38B77289EBA484CA8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_91153440BE874C38B77289EBA484CA8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_91153440BE874C38B77289EBA484CA8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_91153440BE874C38B77289EBA484CA8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_91153440BE874C38B77289EBA484CA8C]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_91153440BE874C38B77289EBA484CA8C'>
            <properties context=''>
              <relation connection='excel-direct.0kk3eze0r5i0qk144ihj70vgew9w' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (COVID-T-5)' inline='true' name='federated.0kw9ok30fftuky15v86hv1obxaxs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-T-5' name='excel-direct.150ns3c1h0vc9b1ci91p01lltuye'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yenib/OneDrive/Masa端st端/COVID-T-5.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.150ns3c1h0vc9b1ci91p01lltuye' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.150ns3c1h0vc9b1ci91p01lltuye' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_B4E6D544129E45ABB44E491D75015BC0]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_B4E6D544129E45ABB44E491D75015BC0'>
            <properties context=''>
              <relation connection='excel-direct.150ns3c1h0vc9b1ci91p01lltuye' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Global Numbers </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (COVID-T-1)' name='federated.0fhazc80kledse16s5d3a03y0s1u' />
          </datasources>
          <datasource-dependencies datasource='federated.0fhazc80kledse16s5d3a03y0s1u'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fhazc80kledse16s5d3a03y0s1u].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fhazc80kledse16s5d3a03y0s1u].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fhazc80kledse16s5d3a03y0s1u].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0fhazc80kledse16s5d3a03y0s1u].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fhazc80kledse16s5d3a03y0s1u].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fhazc80kledse16s5d3a03y0s1u].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]' value='153' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='text-format' field='[federated.0fhazc80kledse16s5d3a03y0s1u].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0fhazc80kledse16s5d3a03y0s1u].[sum:DeathPercentage:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f5eddc' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#f5eddc' />
            <format attr='background-color' data-class='total' scope='cols' value='#f5eddc' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]' value='center' />
            <format attr='vertical-align' field='[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f6f7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#0000006f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0fhazc80kledse16s5d3a03y0s1u].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontalignment='1' fontcolor='#787878'><![CDATA[<[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]>:	]]></run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.0fhazc80kledse16s5d3a03y0s1u].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{38ABF298-8697-4B10-BA49-33276D5C5BB7}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (COVID-T-2)' name='federated.1834pbz1m4udpm17tuiku0tw8hw0' />
          </datasources>
          <datasource-dependencies datasource='federated.1834pbz1m4udpm17tuiku0tw8hw0'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1834pbz1m4udpm17tuiku0tw8hw0].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='1.263370156288147' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1834pbz1m4udpm17tuiku0tw8hw0].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1834pbz1m4udpm17tuiku0tw8hw0].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{812F7A95-A7F8-4EEC-8B8E-F00245235FF2}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (COVID-T-3)' name='federated.0nrub84030llck1ax1to31l440dm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nrub84030llck1ax1to31l440dm'>
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0nrub84030llck1ax1to31l440dm].[sum:PercentPopulationInfected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e4cfd5</color>
                <color>#d7b1bb</color>
                <color>#cb94a2</color>
                <color>#be7a8c</color>
                <color>#b16277</color>
                <color>#a54c63</color>
                <color>#983952</color>
                <color>#8c2742</color>
                <color>#7f1833</color>
                <color>#730c27</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0nrub84030llck1ax1to31l440dm].[sum:PercentPopulationInfected:qk]' value='PercentPopulationInfected'>
              <formatted-text>
                <run>PercentPopulationInfected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0nrub84030llck1ax1to31l440dm].[none:location:nk]' />
              <color column='[federated.0nrub84030llck1ax1to31l440dm].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0nrub84030llck1ax1to31l440dm].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nrub84030llck1ax1to31l440dm].[Latitude (generated)]</rows>
        <cols>[federated.0nrub84030llck1ax1to31l440dm].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D3C52FFA-98BF-4C5A-87B3-FE4CD3998BE3}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (COVID-T-5)' name='federated.0kw9ok30fftuky15v86hv1obxaxs' />
          </datasources>
          <datasource-dependencies datasource='federated.0kw9ok30fftuky15v86hv1obxaxs'>
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0kw9ok30fftuky15v86hv1obxaxs].[tdy:date:qk]' value='23' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kw9ok30fftuky15v86hv1obxaxs].[tdy:date:qk]' value='96' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]' />
              <text column='[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]' />
              <color column='[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:Forecast Indicator:nk]' />
              <lod column='[federated.0kw9ok30fftuky15v86hv1obxaxs].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kw9ok30fftuky15v86hv1obxaxs].[fVal:sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0kw9ok30fftuky15v86hv1obxaxs].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{C02F0194-D9CF-41CC-98B2-6507AF0B14CA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='19124' id='3' name='Sheet 1' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29876' id='5' name='Sheet 2' w='49200' x='800' y='20124'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44249' id='6' name='Sheet 3' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Sheet 4' w='81299' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]&#10;[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:Forecast Indicator:nk]' type-v2='color' w='17101' x='82099' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='72' h='4751' id='10' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.0nrub84030llck1ax1to31l440dm].[sum:PercentPopulationInfected:qk]' type-v2='color' w='49200' x='50000' y='45249'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#becac8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='145' h='19124' id='3' is-fixed='true' name='Sheet 1' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44249' id='6' is-fixed='true' name='Sheet 3' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='72' h='4751' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0nrub84030llck1ax1to31l440dm].[sum:PercentPopulationInfected:qk]' type-v2='color' w='49200' x='50000' y='45249'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='231' h='29876' id='5' is-fixed='true' name='Sheet 2' w='49200' x='800' y='20124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Sheet 4' w='81299' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49000' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]&#10;[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:Forecast Indicator:nk]' type-v2='color' w='17101' x='82099' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#becac8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{05CDA37C-3C0C-4B86-846B-7511A833AF5A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fhazc80kledse16s5d3a03y0s1u].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE0E0EAC-BB24-4D54-8CE4-C0E71A96D912}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1834pbz1m4udpm17tuiku0tw8hw0].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36AE888E-506F-4D99-9783-25AB1114B081}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nrub84030llck1ax1to31l440dm].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nrub84030llck1ax1to31l440dm].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56C652E2-AAF3-4103-9298-E1974496C501}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]&#10;[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:Forecast Indicator:nk]</field>
            <field>[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:date:nk]</field>
            <field>[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B74DFFB-046B-488D-888B-1019A32BB742}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:Forecast Indicator:nk]</field>
              <field>[federated.0kw9ok30fftuky15v86hv1obxaxs].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{BF35F1DD-3C20-437F-AA1B-779C53E44B5E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='51' name='Sheet 1' width='192'>
      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
      +YwZM4bZs/v87u4nhhDAA4xGI/fu3bNZ9/XXX6NQKFAqlbi7uzN//nyKiop6JKvFYuHo0aOE
      hoYydOjQXv3U1dVhsVisyrVaLXfu3LHagTIYDLz77rskJiZaJZy3tzenT5+2ue0YExPTtSUZ
      ExPTl1tBfX092dnZJCQkWD25y8rKaG1tZeHChXb7uH37NgUFBaxZs+apffqDEEAXDQ0NzJkz
      h82bN6PRaLBYLJhMJnJycti+fTubNm3q+iIXL16M0Whk/fr16PV6TCYTmZmZlJaWkpSUZNfP
      hg0biIyM5OLFi5hMJiwWC1988QWxsbFERUURFBTUo31ZWRnNzc1ER0c/ls99+vRp9u3b1yX+
      qqoq4uLiCA4OJiIiokdbg8FAZmYmiYmJDnexDh8+jJ+fH3Pnzn0scX9nSI+ga23rcX3f0Wg0
      kr+/vwTYvPz9/SWNRiNJkiTduXNHev311yVfX18JkORyuTRr1iypoqLCqt/6+nopLi5Oksvl
      kkwmk1555RWpqqrKpu+tW7d2lRmNRik3N1cKDg6WZDKZ5O7uLgUEBEj79++X7t+/38O+paVF
      Cg8Pl3bv3t3nzx0TEyMVFhb2KCssLJTUarV07ty5rrLr169LS5culZRKpQRIo0ePlnbs2CG1
      t7db9XnixAkpJCRE0mq1dn1rtVopJCREOnHihFOx7tmzx6l2jwNxJFLQ74gjkQJBPyEEIHBp
      /g+ZuIGl1LfiUAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      gDA0CYAwtP8DTdpqUIkLrvoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      sf5/ZHRAqkMu7HgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
